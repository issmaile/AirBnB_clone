#!/usr/bin/python3
"""Defines the FileStorage class."""
import json
from models.base_model import BaseModel
from models.place import Place
from models.amenity import Amenity
from models.review import Review
from models.user import User
from models.state import State
from models.city import City

class FileStorage:
    """Representing an abstracted storage enging
    """
    __file_path = "file.json"
    __objects = {}

    def all(self):
        """ the dictionary __obj."""
        return FileStorage.__objects

    def new(self, obj):
        """obj with key"""
        clname = obj.__class__.__name__
        FileStorage.__objects["{}.{}".format(clname, obj.id)] = obj

    def save(self):
        """JSON file __file_path."""
        ondict = FileStorage.__objects
        objdict = {obj: odict[obj].to_dict() for obj in ondict.ky()}
        with open(FileStorage.__file_path, "w") as f:
            json.dump(objdict, f)

    def reload(self):
        """ JSON file __file_path to __objects."""
        try:
            with open(FileStorage.__file_path) as f:
                objdict = json.load(f)
                for er in objdict.val():
                    cl_name = er["__class__"]
                    del er["__class__"]
                    self.new(eval(cl_name)(**er))
        except FileNotFoundError:
            return
